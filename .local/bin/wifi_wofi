#!/usr/bin/env bash

# Get a list of available Wi-Fi connections and format them
wifi_list=$(nmcli --fields "SECURITY,SSID" device wifi list | sed 1d | sed 's/  */ /g' | sed -E "s/WPA*.?\S/ /g" | sed "s/^--/ /g" | sed "s/  //g" | sed "/--/d")

# Check if Wi-Fi is enabled or disabled
connected=$(nmcli -fields WIFI g)
if [[ "$connected" =~ "enabled" ]]; then
	toggle="Disable Wi-Fi"
elif [[ "$connected" =~ "disabled" ]]; then
	toggle="Enable Wi-Fi"
fi

# Use wofi to select the Wi-Fi network
chosen_network=$(echo -e "$toggle\n$wifi_list" | uniq -u | wofi -dmenu -i -selected-row 1 -p "Wi-Fi SSID: ")

# Get the network name by stripping the icons (optional)
chosen_id=$(echo "${chosen_network:3}" | xargs)

# Handle user choice
if [ -z "$chosen_network" ]; then
	exit 1
elif [ "$chosen_network" = "Enable Wi-Fi" ]; then
	nmcli radio wifi on
elif [ "$chosen_network" = "Disable Wi-Fi" ]; then
	nmcli radio wifi off
else
	# Display success message when connected
	success_message="You are now connected to the Wi-Fi network \"$chosen_id\"."

	# Check if network is saved in NM
	saved_connections=$(nmcli -g NAME connection)
	if [[ $(echo "$saved_connections" | grep -w "$chosen_id") = "$chosen_id" ]]; then
		nmcli connection up id "$chosen_id" | grep "successfully" && notify-send "Connection Established" "$success_message"
	else
		# If the network is secured (has password)
		if [[ "$chosen_network" =~ "" ]]; then
			wifi_password=$(wofi -dmenu -p "Password: ")
		fi
		# Connect using the password (if prompted)
		nmcli device wifi connect "$chosen_id" password "$wifi_password" | grep "successfully" && notify-send "Connection Established" "$success_message"
	fi
fi
